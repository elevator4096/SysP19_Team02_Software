#deep-1

meta {
	version = "2012-11-26";
	description = "Description file for the NTB deep simple tasking system for PowerPC architecture";
}

operatingsystem ntbSTS_ppc {
	description = "NTB Simple Tasking System for PPC";
		
	us {
        class = "ch/ntb/inf/deep/unsafe/US";
        attributes = synthetic;
        method PUT1 {
            attributes = unsafe, synthetic;
            id = 0x001;
        }
        method PUT2 {
            attributes = unsafe, synthetic;
            id = 0x002;
        }
        method PUT4 {
            attributes = unsafe, synthetic;
            id = 0x003;
        }
        method PUT8 {
            attributes = unsafe, synthetic;
            id = 0x004;
        }
        method GET1 {
            attributes = unsafe, synthetic;
            id = 0x005;
        }
        method GET2 {
            attributes = unsafe, synthetic;
            id = 0x006;
        }
        method GET4 {
            attributes = unsafe, synthetic;
            id = 0x007;
        }
        method GET8 {
            attributes = unsafe, synthetic;
            id = 0x008;
        }
        method BIT {
            attributes = unsafe, synthetic;
            id = 0x009;
        }
        method ASM {
            attributes = unsafe, synthetic;
            id = 0x00A;
        }
        method GETGPR {
            attributes = unsafe, synthetic;
            id = 0x00B;
        }
        method GETFPR {
            attributes = unsafe, synthetic;
            id = 0x00C;
        }
        method GETSPR {
            attributes = unsafe, synthetic;
            id = 0x00D;
        }
        method PUTGPR {
            attributes = unsafe, synthetic;
            id = 0x00E;
        }
        method PUTFPR {
            attributes = unsafe, synthetic;
            id = 0x00F;
        }
        method PUTSPR {
            attributes = unsafe, synthetic;
            id = 0x010;
        }                
        method ADR_OF_METHOD {
            attributes = unsafe, synthetic;
            id = 0x011;
        }                
        method HALT {
            attributes = unsafe, synthetic;
            id = 0x012;
        }                
        method ENABLE_FLOATS {
            attributes = unsafe, synthetic;
            id = 0x013;
        }
        method REF {
            attributes = unsafe, synthetic;
            id = 0x014;
        }                
    }
    
    lowlevel {
            class = "ch/ntb/inf/deep/lowLevel/LL";
            attributes = synthetic;
            method mostSign1BitNr {
                attributes = synthetic;
                id = 0x101;
            }
            method leastSign1BitNr{
                attributes = synthetic;
                id = 0x102;
            }
            method getBit {
                attributes = synthetic;
                id = 0x103;
            }
            method isPowOf2 {
                attributes = synthetic;
                id = 0x104;
            }
            method nextPowOf2 {
                attributes = synthetic;
                id = 0x105;
            }
            method doubleToBits {
                attributes = synthetic;
                id = 0x106;
            }    
            method bitsToDouble {
                attributes = synthetic;
                id = 0x107;
            }
            method floatToBits {
                attributes = synthetic;
                id = 0x108;
            }    
            method bitsToFloat {
                attributes = synthetic;
                id = 0x109;
            }
    }
	
    heapclass {
        class = "ch/ntb/inf/deep/runtime/ppc32/Heap";
        method newMultiDimArray  {
                attributes = new;
                id = 0x204;
        }
        method newRefArray {
                attributes = new;
                id = 0x203;
        }
        method newPrimTypeArray {
                attributes = new;
                id = 0x202;
        }
        method newObject {
                attributes = new;
                id = 0x201;
        }
     	method <init> {
    		attributes = synthetic;
    	}
    }
	        
    exceptionbaseclass {
    	class = "ch/ntb/inf/deep/runtime/ppc32/PPCException";
    	condition = cpuarch:ppc32;
    }
    
	exception {
    	class = "ch/ntb/inf/deep/runtime/mpc555/Reset";
    	condition = boardtype:ntbMpc555HB;
    	method reset {
    		attributes = exchnd;
			offset = 0x100;
    	}
    	method <init> {
    		attributes = synthetic;
    	}
    }
    
	exception {
    	class = "ch/ntb/inf/deep/runtime/mpc5200/ResetPCMtiny";
    	condition = boardtype:phyCoreMpc5200tiny;
    	method reset {
    		attributes = exchnd;
			offset = 0x100;
    	}
    	method <init> {
    		attributes = synthetic;
    	}
    }
    
    exception {
    	class = "ch/ntb/inf/deep/runtime/mpc5200/ResetPCMio";
    	condition = boardtype:phyCoreMpc5200io;
    	method reset {
    		attributes = exchnd;
			offset = 0x100;
    	}
    	method <init> {
    		attributes = synthetic;
    	}
    }
    
    exception {
    	class = "ch/ntb/inf/deep/runtime/mpc5200/ResetPCMuBoot";
    	condition = boardtype:phyCoreMpc5200uBoot;
    	method reset {
    		attributes = exchnd;
			offset = 0x100;
    	}
    	method <init> {
    		attributes = synthetic;
    	}
    }
    
	exception {
    	class = "ch/ntb/inf/deep/runtime/ppc32/MachineCheck";
  		method machineCheck {
    		attributes = exchnd;
    		offset = 0x200;
		}
		method <init> {
			attributes = synthetic;
		}
	}
	
	exception {
    	class = "ch/ntb/inf/deep/runtime/mpc555/Interrupt";
    	condition = cputype:mpc555;
    	method interrupt {
    		attributes = exchnd;
			offset = 0x500;
    	}
    }
    
    exception {
    	class = "ch/ntb/inf/deep/runtime/mpc5200/Interrupt";
    	condition = cputype:mpc5200;
    	method interrupt {
    		attributes = exchnd;
			offset = 0x500;
    	}
    }
    
    exception {
    	class = "ch/ntb/inf/deep/runtime/ppc32/ProgramExc";
 		method programExc {
    		attributes = exchnd;
    		offset = 0x700;
		}
		method <init> {
			attributes = synthetic;
		}
	}
	
	exception {
    	class = "ch/ntb/inf/deep/runtime/ppc32/FloatingPointUnavailable";
		method floatingPointUnavailable {
    		attributes = exchnd;
    		offset = 0x800;
		}
		method <init> {
			attributes = synthetic;
		}
	}
	
	exception {
		class = "ch/ntb/inf/deep/runtime/ppc32/Decrementer";
		method decrementer {
			attributes = exchnd;
			offset = 0x900;
		}
	}
	
    exception {
    	class = "ch/ntb/inf/deep/runtime/ppc32/SystemCall";
 		method systemCall {
    		attributes = exchnd;
    		offset = 0xc00;
		}
		method <init> {
			attributes = synthetic;
		}
	}
	
	kernel {
		class = "ch/ntb/inf/deep/runtime/mpc555/Kernel";
		condition = cputype:mpc555;
	}
	
	kernel {
		class = "ch/ntb/inf/deep/runtime/mpc5200/Kernel";
		condition = cputype:mpc5200;
	}

}
