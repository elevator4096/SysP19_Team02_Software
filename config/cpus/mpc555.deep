#deep-1

meta {
	version = "2012-06-14";
	description = "CPU description file for Freescale MPC555";
}

cpu mpc555 {
	description = "Freescale MPC555";
	cpuarch = ppc32;
	
	sysconst {
		IMB = 0x0;										# Internal Memory Base
		
		SRAMA_BaseAddr = IMB + 0x3F9800;				# Internal SRAM A Base Address
		SRAMA_Size = 0x2800;							# Internal SRAM A Size (10 KiB)
		SRAMB_BaseAddr = SRAMA_BaseAddr + SRAMA_Size;	# Internal SRAM B Base Address
		SRAMB_Size = 0x4000;							# Internal SRAM B Size (16 KiB)
		
		CMFA_BaseAddr = IMB + 0x0;						# Internal Flash A Base Address
		CMFA_Size = 0x40000;							# Internal Flash A Size (256 KiB)
		CMFB_BaseAddr = CMFA_BaseAddr + CMFA_Size;		# Internal Flash B Base Address
		CMFB_Size = 0x30000;							# Internal Flash B Size (192 KiB)
		
		excpCodeBase = IMB;								# Base address for exception code
		excpCodeSize = 0x4000;							# Exception code size
		
		sysTabBaseAddr = IMB + excpCodeSize;			# Place system table behind exception code
		
		stackSize = 0x2000;								# Default stack size
		SRR1init = 0x3802;								# Initial value of Machine Status Save/Restore Register 1
	}
	
	memorymap {

		# ===== Internal RAM =====
		device InternalRam {
			attributes = read, write;
			width = 4; # byte
			size = SRAMA_Size + SRAMB_Size;
			base = SRAMA_BaseAddr;
			technology = ram;
		}
		
		segment InternalRam.SysTab {
			base = sysTabBaseAddr;
			attributes = read, write, systab;
		}
		
		segment InternalRam.Constants {
			attributes = read, write, const;
		}
		
		segment InternalRam.Code {
			attributes = read, write, code;
		}
		
		segment InternalRam.Variables {
			attributes = read, write, var;
		}
		

		segment InternalRam.Stack {
			attributes = read, write, stack;
			size = stackSize;
			base = SRAMB_BaseAddr + SRAMB_Size - stackSize ;
		}
		
		# ===== Internal Flash =====
		device InternalFlash {
			attributes = read;
			width = 4; # byte
			size = CMFA_Size + CMFB_Size;
			base = CMFA_BaseAddr;
			technology = flash;
			memorytype = "mpc555interalflash";
			
			memorysectorarray A {
			  base = CMFA_BaseAddr;
			  sectorsize = 0x08000;
			  nofsectors = 8;
			}
			
			memorysectorarray B {
			  base = CMFB_BaseAddr;
			  sectorsize = 0x08000;
			  nofsectors = 6;
			}
		}
				
		segment InternalFlash.A {
			base = CMFA_BaseAddr;
			size = CMFA_Size;
		}
		
		segment InternalFlash.B {
			base =  CMFB_BaseAddr;
			size = CMFB_Size;

		}
	}
	
	registermap {
			
		# special purpose register

		 register SPR80 {
			 type = SPR;
			 addr = 80;
			 size = 4;
		}
		 register EIE {
			 type = SPR;
			 addr = 80;
			 size = 4;
		}
		 register SPR81 {
			 type = SPR;
			 addr = 81;
			 size = 4;
		}
		 register EID {
			 type = SPR;
			 addr = 81;
			 size = 4;
		}
		 register SPR82 {
			 type = SPR;
			 addr = 82;
			 size = 4;
		}
		 register NRI {
			 type = SPR;
			 addr = 82;
			 size = 4;
		}
		 register SPR144 {
			 type = SPR;
			 addr = 144;
			 size = 4;
		}
		 register CMPA {
			 type = SPR;
			 addr = 144;
			 size = 4;
		}
		 register SPR145 {
			 type = SPR;
			 addr = 145;
			 size = 4;
		}
		 register CMPB {
			 type = SPR;
			 addr = 145;
			 size = 4;
		}
		 register SPR146 {
			 type = SPR;
			 addr = 146;
			 size = 4;
		}
		 register CMPC {
			 type = SPR;
			 addr = 146;
			 size = 4;
		}
		 register SPR147 {
			 type = SPR;
			 addr = 147;
			 size = 4;
		}
		 register CMPD {
			 type = SPR;
			 addr = 147;
			 size = 4;
		}
		 register SPR148 {
			 type = SPR;
			 addr = 148;
			 size = 4;
		}
		 register ECR {
			 type = SPR;
			 addr = 148;
			 size = 4;
		}
		 register SPR149 {
			 type = SPR;
			 addr = 149;
			 size = 4;
		}
		 register DER {
			 type = SPR;
			 addr = 149;
			 size = 4;
		}
		 register SPR150 {
			 type = SPR;
			 addr = 150;
			 size = 4;
		}
		 register COUNTA {
			 type = SPR;
			 addr = 150;
			 size = 4;
		}
		 register SPR151 {
			 type = SPR;
			 addr = 151;
			 size = 4;
		}
		 register COUNTB {
			 type = SPR;
			 addr = 151;
			 size = 4;
		}
		 register SPR152 {
			 type = SPR;
			 addr = 152;
			 size = 4;
		}
		 register CMPE {
			 type = SPR;
			 addr = 152;
			 size = 4;
		}
		 register SPR153 {
			 type = SPR;
			 addr = 153;
			 size = 4;
		}
		 register CMPF {
			 type = SPR;
			 addr = 153;
			 size = 4;
		}
		 register SPR154 {
			 type = SPR;
			 addr = 154;
			 size = 4;
		}
		 register CMPG {
			 type = SPR;
			 addr = 154;
			 size = 4;
		}
		 register SPR155 {
			 type = SPR;
			 addr = 155;
			 size = 4;
		}
		 register CMPH {
			 type = SPR;
			 addr = 155;
			 size = 4;
		}
		 register SPR156 {
			 type = SPR;
			 addr = 156;
			 size = 4;
		}
		 register LCTRL1 {
			 type = SPR;
			 addr = 156;
			 size = 4;
		}
		 register SPR157 {
			 type = SPR;
			 addr = 157;
			 size = 4;
		}
		 register LCTRL2 {
			 type = SPR;
			 addr = 157;
			 size = 4;
		}
		 register SPR158 {
			 type = SPR;
			 addr = 158;
			 size = 4;
		}
		 register ICTRL {
			 type = SPR;
			 addr = 158;
			 size = 4;
		}
		 register SPR159 {
			 type = SPR;
			 addr = 159;
			 size = 4;
		}
		 register BAR {
			 type = SPR;
			 addr = 159;
			 size = 4;
		}
		 register PVR {
			 type = SPR;
			 addr = 287;
			 size = 4;
		}
		 register SPR528 {
			 type = SPR;
			 addr = 528;
			 size = 4;
		}
		 register MI_GRA {
			 type = SPR;
			 addr = 528;
			 size = 4;
		}
		 register SPR536 {
			 type = SPR;
			 addr = 536;
			 size = 4;
		}
		 register L2U_GRA {
			 type = SPR;
			 addr = 536;
			 size = 4;
		}
		 register SPR560 {
			 type = SPR;
			 addr = 560;
			 size = 4;
		}
		 register BBCMCR {
			 type = SPR;
			 addr = 560;
			 size = 4;
		}
		 register SPR568 {
			 type = SPR;
			 addr = 568;
			 size = 4;
		}
		 register L2U_MCR {
			 type = SPR;
			 addr = 568;
			 size = 4;
		}
		 register SPR630 {
			 type = SPR;
			 addr = 630;
			 size = 4;
		}
		 register DPDR {
			 type = SPR;
			 addr = 630;
			 size = 4;
		}
		 register SPR638 {
			 type = SPR;
			 addr = 638;
			 size = 4;
		}
		 register IMMR {
			 type = SPR;
			 addr = 638;
			 size = 4;
		}
		 register SPR784 {
			 type = SPR;
			 addr = 784;
			 size = 4;
		}
		 register MI_RBA0 {
			 type = SPR;
			 addr = 784;
			 size = 4;
		}
		 register SPR785 {
			 type = SPR;
			 addr = 785;
			 size = 4;
		}
		 register MI_RBA1 {
			 type = SPR;
			 addr = 785;
			 size = 4;
		}
		 register SPR786 {
			 type = SPR;
			 addr = 786;
			 size = 4;
		}
		 register MI_RBA2 {
			 type = SPR;
			 addr = 786;
			 size = 4;
		}
		 register SPR787 {
			 type = SPR;
			 addr = 787;
			 size = 4;
		}
		 register MI_RBA3 {
			 type = SPR;
			 addr = 787;
			 size = 4;
		}
		 register SPR792 {
			 type = SPR;
			 addr = 792;
			 size = 4;
		}
		 register L2U_RBA0 {
			 type = SPR;
			 addr = 792;
			 size = 4;
		}
		 register SPR793 {
			 type = SPR;
			 addr = 793;
			 size = 4;
		}
		 register L2U_RBA1 {
			 type = SPR;
			 addr = 793;
			 size = 4;
		}
		 register SPR794 {
			 type = SPR;
			 addr = 794;
			 size = 4;
		}
		 register L2U_RBA2 {
			 type = SPR;
			 addr = 794;
			 size = 4;
		}
		 register SPR795 {
			 type = SPR;
			 addr = 795;
			 size = 4;
		}
		 register L2U_RBA3 {
			 type = SPR;
			 addr = 795;
			 size = 4;
		}
		 register SPR816 {
			 type = SPR;
			 addr = 816;
			 size = 4;
		}
		 register MI_RA0 {
			 type = SPR;
			 addr = 816;
			 size = 4;
		}
		 register SPR817 {
			 type = SPR;
			 addr = 817;
			 size = 4;
		}
		 register MI_RA1 {
			 type = SPR;
			 addr = 817;
			 size = 4;
		}
		 register SPR818 {
			 type = SPR;
			 addr = 818;
			 size = 4;
		}
		 register MI_RA2 {
			 type = SPR;
			 addr = 818;
			 size = 4;
		}
		 register SPR819 {
			 type = SPR;
			 addr = 819;
			 size = 4;
		}
		 register MI_RA3 {
			 type = SPR;
			 addr = 819;
			 size = 4;
		}
		 register SPR824 {
			 type = SPR;
			 addr = 824;
			 size = 4;
		}
		 register L2U_RA0 {
			 type = SPR;
			 addr = 824;
			 size = 4;
		}
		 register SPR825 {
			 type = SPR;
			 addr = 825;
			 size = 4;
		}
		 register L2U_RA1 {
			 type = SPR;
			 addr = 825;
			 size = 4;
		}
		 register SPR826 {
			 type = SPR;
			 addr = 826;
			 size = 4;
		}
		 register L2U_RA2 {
			 type = SPR;
			 addr = 826;
			 size = 4;
		}
		 register SPR827 {
			 type = SPR;
			 addr = 827;
			 size = 4;
		}
		 register L2U_RA3 {
			 type = SPR;
			 addr = 827;
			 size = 4;
		}
		 register SPR1022 {
			 type = SPR;
			 addr = 1022;
			 size = 4;
		}
		 register FPECR {
			 type = SPR;
			 addr = 1022;
			 size = 4;
		}
		

		# input/output registers
		 register SIUMCR {
			 type = IOR;
			 addr = 0x2FC000;
			 size = 4;
		}
		 register SYPCR {
			 type = IOR;
			 addr = 0x2FC004;
			 size = 4;
		}
		 register SWSR {
			 type = IOR;
			 addr = 0x2FC00E;
			 size = 2;
		}
		 register SIPEND {
			 type = IOR;
			 addr = 0x2FC010;
			 size = 4;
		}
		 register SIMASK {
			 type = IOR;
			 addr = 0x2FC014;
			 size = 4;
		}
		 register SIEL {
			 type = IOR;
			 addr = 0x2FC018;
			 size = 4;
		}
		 register SIVEC {
			 type = IOR;
			 addr = 0x2FC01C;
			 size = 4;
		}
		 register TESR {
			 type = IOR;
			 addr = 0x2FC020;
			 size = 4;
		}
		 register SGPIODT1 {
			 type = IOR;
			 addr = 0x2FC024;
			 size = 4;
		}
		 register SGPIODT2 {
			 type = IOR;
			 addr = 0x2FC028;
			 size = 4;
		}
		 register SGPIOCR {
			 type = IOR;
			 addr = 0x2FC02C;
			 size = 4;
		}
		 register EMCR {
			 type = IOR;
			 addr = 0x2FC030;
			 size = 4;
		}
		 register PDMCR {
			 type = IOR;
			 addr = 0x2FC03C;
			 size = 2;
		}
		 register BR0 {
			 type = IOR;
			 addr = 0x2FC100;
			 size = 4;
		}
		 register OR0 {
			 type = IOR;
			 addr = 0x2FC104;
			 size = 4;
		}
		 register BR1 {
			 type = IOR;
			 addr = 0x2FC108;
			 size = 4;
		}
		 register OR1 {
			 type = IOR;
			 addr = 0x2FC10C;
			 size = 4;
		}
		 register BR2 {
			 type = IOR;
			 addr = 0x2FC110;
			 size = 4;
		}
		 register OR2 {
			 type = IOR;
			 addr = 0x2FC114;
			 size = 4;
		}
		 register BR3 {
			 type = IOR;
			 addr = 0x2FC118;
			 size = 4;
		}
		 register OR3 {
			 type = IOR;
			 addr = 0x2FC11C;
			 size = 4;
		}
		 register DMBR {
			 type = IOR;
			 addr = 0x2FC140;
			 size = 4;
		}
		 register DMOR {
			 type = IOR;
			 addr = 0x2FC144;
			 size = 4;
		}
		 register MSTAT {
			 type = IOR;
			 addr = 0x2FC178;
			 size = 2;
		}
		 register TBSCR {
			 type = IOR;
			 addr = 0x2FC200;
			 size = 4;
		}
		 register TBREF0 {
			 type = IOR;
			 addr = 0x2FC204;
			 size = 4;
		}
		 register TBREF1 {
			 type = IOR;
			 addr = 0x2FC208;
			 size = 4;
		}
		 register RTCSC {
			 type = IOR;
			 addr = 0x2FC220;
			 size = 4;
		}
		 register RTC {
			 type = IOR;
			 addr = 0x2FC224;
			 size = 4;
		}
		 register RTSEC {
			 type = IOR;
			 addr = 0x2FC228;
			 size = 4;
		}
		 register RTCAL {
			 type = IOR;
			 addr = 0x2FC22C;
			 size = 4;
		}
		 register PISCR {
			 type = IOR;
			 addr = 0x2FC240;
			 size = 4;
		}
		 register PITC {
			 type = IOR;
			 addr = 0x2FC244;
			 size = 4;
		}
		 register PITR {
			 type = IOR;
			 addr = 0x2FC248;
			 size = 4;
		}
		 register SCCR {
			 type = IOR;
			 addr = 0x2FC280;
			 size = 4;
		}
		 register PLPRCR {
			 type = IOR;
			 addr = 0x2FC284;
			 size = 4;
		}
		 register RSR {
			 type = IOR;
			 addr = 0x2FC288;
			 size = 2;
		}
		 register COLIR {
			 type = IOR;
			 addr = 0x2FC28C;
			 size = 2;
		}
		 register VSRMCR {
			 type = IOR;
			 addr = 0x2FC290;
			 size = 2;
		}
		 register TBSCRK {
			 type = IOR;
			 addr = 0x2FC300;
			 size = 4;
		}
		 register TBREF0K {
			 type = IOR;
			 addr = 0x2FC304;
			 size = 4;
		}
		 register TBREF1K {
			 type = IOR;
			 addr = 0x2FC308;
			 size = 4;
		}
		 register TBK {
			 type = IOR;
			 addr = 0x2FC30C;
			 size = 4;
		}
		 register RTCSCK {
			 type = IOR;
			 addr = 0x2FC320;
			 size = 4;
		}
		 register RTCK {
			 type = IOR;
			 addr = 0x2FC324;
			 size = 4;
		}
		 register RTSECK {
			 type = IOR;
			 addr = 0x2FC328;
			 size = 4;
		}
		 register RTCALK {
			 type = IOR;
			 addr = 0x2FC32C;
			 size = 4;
		}
		 register PISCRIK {
			 type = IOR;
			 addr = 0x2FC340;
			 size = 4;
		}
		 register PITCK {
			 type = IOR;
			 addr = 0x2FC344;
			 size = 4;
		}
		 register SCCRK {
			 type = IOR;
			 addr = 0x2FC380;
			 size = 4;
		}
		 register PLPRCRK {
			 type = IOR;
			 addr = 0x2FC384;
			 size = 4;
		}
		 register RSRK {
			 type = IOR;
			 addr = 0x2FC388;
			 size = 4;
		}
		 register CMFMCR_A {
			 type = IOR;
			 addr = 0x2FC800;
			 size = 4;
		}
		 register CMFTST_A {
			 type = IOR;
			 addr = 0x2FC804;
			 size = 4;
		}
		 register CMFCTL_A {
			 type = IOR;
			 addr = 0x2FC808;
			 size = 4;
		}
		 register CMFMCR_B {
			 type = IOR;
			 addr = 0x2FC840;
			 size = 4;
		}
		 register CMFTST_B {
			 type = IOR;
			 addr = 0x2FC844;
			 size = 4;
		}
		 register CMFCTL_B {
			 type = IOR;
			 addr = 0x2FC848;
			 size = 4;
		}
		 register DPTMCR {
			 type = IOR;
			 addr = 0x300000;
			 size = 2;
		}
		 register RAMBAR {
			 type = IOR;
			 addr = 0x300004;
			 size = 2;
		}
		 register MISRH {
			 type = IOR;
			 addr = 0x300006;
			 size = 2;
		}
		 register MISRL {
			 type = IOR;
			 addr = 0x300008;
			 size = 2;
		}
		 register MISCNT {
			 type = IOR;
			 addr = 0x30000A;
			 size = 2;
		}
		 register TPUMCR_A {
			 type = IOR;
			 addr = 0x304000;
			 size = 2;
		}
		 register DSCR_A {
			 type = IOR;
			 addr = 0x304004;
			 size = 2;
		}
		 register DSSR_A {
			 type = IOR;
			 addr = 0x304006;
			 size = 2;
		}
		 register TICR_A {
			 type = IOR;
			 addr = 0x304008;
			 size = 2;
		}
		 register CIER_A {
			 type = IOR;
			 addr = 0x30400A;
			 size = 2;
		}
		 register CFSR0_A {
			 type = IOR;
			 addr = 0x30400C;
			 size = 2;
		}
		 register CFSR1_A {
			 type = IOR;
			 addr = 0x30400E;
			 size = 2;
		}
		 register CFSR2_A {
			 type = IOR;
			 addr = 0x304010;
			 size = 2;
		}
		 register CFSR3_A {
			 type = IOR;
			 addr = 0x304012;
			 size = 2;
		}
		 register HSQR0_A {
			 type = IOR;
			 addr = 0x304014;
			 size = 2;
		}
		 register HSQR1_A {
			 type = IOR;
			 addr = 0x304016;
			 size = 2;
		}
		 register HSRR0_A {
			 type = IOR;
			 addr = 0x304018;
			 size = 2;
		}
		 register HSRR1_A {
			 type = IOR;
			 addr = 0x30401A;
			 size = 2;
		}
		 register CPR0_A {
			 type = IOR;
			 addr = 0x30401C;
			 size = 2;
		}
		 register CPR1_A {
			 type = IOR;
			 addr = 0x30401E;
			 size = 2;
		}
		 register CISR_A {
			 type = IOR;
			 addr = 0x304020;
			 size = 2;
		}
		 register TPUMCR2_A {
			 type = IOR;
			 addr = 0x304028;
			 size = 2;
		}
		 register TPUMCR3_A {
			 type = IOR;
			 addr = 0x30402A;
			 size = 2;
		}
		 register TPURAM0_A {
			 type = IOR;
			 addr = 0x304100;
			 size = 2;
		}
		 register TPURAM1_A {
			 type = IOR;
			 addr = 0x304110;
			 size = 2;
		}
		 register TPURAM2_A {
			 type = IOR;
			 addr = 0x304120;
			 size = 2;
		}
		 register TPURAM3_A {
			 type = IOR;
			 addr = 0x304130;
			 size = 2;
		}
		 register TPURAM4_A {
			 type = IOR;
			 addr = 0x304140;
			 size = 2;
		}
		 register TPURAM5_A {
			 type = IOR;
			 addr = 0x304150;
			 size = 2;
		}
		 register TPURAM6_A {
			 type = IOR;
			 addr = 0x304160;
			 size = 2;
		}
		 register TPURAM7_A {
			 type = IOR;
			 addr = 0x304170;
			 size = 2;
		}
		 register TPURAM8_A {
			 type = IOR;
			 addr = 0x304180;
			 size = 2;
		}
		 register TPURAM9_A {
			 type = IOR;
			 addr = 0x304190;
			 size = 2;
		}
		 register TPURAM10_A {
			 type = IOR;
			 addr = 0x3041A0;
			 size = 2;
		}
		 register TPURAM11_A {
			 type = IOR;
			 addr = 0x3041B0;
			 size = 2;
		}
		 register TPURAM12_A {
			 type = IOR;
			 addr = 0x3041C0;
			 size = 2;
		}
		 register TPURAM13_A {
			 type = IOR;
			 addr = 0x3041D0;
			 size = 2;
		}
		 register TPURAM14_A {
			 type = IOR;
			 addr = 0x3041E0;
			 size = 2;
		}
		 register TPURAM15_A {
			 type = IOR;
			 addr = 0x3041F0;
			 size = 2;
		}
		 register TPUMCR_B {
			 type = IOR;
			 addr = 0x304400;
			 size = 2;
		}
		 register DSCR_B {
			 type = IOR;
			 addr = 0x304404;
			 size = 2;
		}
		 register DSSR_B {
			 type = IOR;
			 addr = 0x304406;
			 size = 2;
		}
		 register TICR_B {
			 type = IOR;
			 addr = 0x304408;
			 size = 2;
		}
		 register CIER_B {
			 type = IOR;
			 addr = 0x30440A;
			 size = 2;
		}
		 register CFSR0_B {
			 type = IOR;
			 addr = 0x30440C;
			 size = 2;
		}
		 register CFSR1_B {
			 type = IOR;
			 addr = 0x30440E;
			 size = 2;
		}
		 register CFSR2_B {
			 type = IOR;
			 addr = 0x304410;
			 size = 2;
		}
		 register CFSR3_B {
			 type = IOR;
			 addr = 0x304412;
			 size = 2;
		}
		 register HSQR0_B {
			 type = IOR;
			 addr = 0x304414;
			 size = 2;
		}
		 register HSQR1_B {
			 type = IOR;
			 addr = 0x304416;
			 size = 2;
		}
		 register HSRR0_B {
			 type = IOR;
			 addr = 0x304418;
			 size = 2;
		}
		 register HSRR1_B {
			 type = IOR;
			 addr = 0x30441A;
			 size = 2;
		}
		 register CPR0_B {
			 type = IOR;
			 addr = 0x30441C;
			 size = 2;
		}
		 register CPR1_B {
			 type = IOR;
			 addr = 0x30441E;
			 size = 2;
		}
		 register CISR_B {
			 type = IOR;
			 addr = 0x304420;
			 size = 2;
		}
		 register TPUMCR2_B {
			 type = IOR;
			 addr = 0x304428;
			 size = 2;
		}
		 register TPUMCR3_B {
			 type = IOR;
			 addr = 0x30442A;
			 size = 2;
		}
		 register TPURAM0_B {
			 type = IOR;
			 addr = 0x304500;
			 size = 2;
		}
		 register TPURAM1_B {
			 type = IOR;
			 addr = 0x304510;
			 size = 2;
		}
		 register TPURAM2_B {
			 type = IOR;
			 addr = 0x304520;
			 size = 2;
		}
		 register TPURAM3_B {
			 type = IOR;
			 addr = 0x304530;
			 size = 2;
		}
		 register TPURAM4_B {
			 type = IOR;
			 addr = 0x304540;
			 size = 2;
		}
		 register TPURAM5_B {
			 type = IOR;
			 addr = 0x304550;
			 size = 2;
		}
		 register TPURAM6_B {
			 type = IOR;
			 addr = 0x304560;
			 size = 2;
		}
		 register TPURAM7_B {
			 type = IOR;
			 addr = 0x304570;
			 size = 2;
		}
		 register TPURAM8_B {
			 type = IOR;
			 addr = 0x304580;
			 size = 2;
		}
		 register TPURAM9_B {
			 type = IOR;
			 addr = 0x304590;
			 size = 2;
		}
		 register TPURAM10_B {
			 type = IOR;
			 addr = 0x3045A0;
			 size = 2;
		}
		 register TPURAM11_B {
			 type = IOR;
			 addr = 0x3045B0;
			 size = 2;
		}
		 register TPURAM12_B {
			 type = IOR;
			 addr = 0x3045C0;
			 size = 2;
		}
		 register TPURAM13_B {
			 type = IOR;
			 addr = 0x3045D0;
			 size = 2;
		}
		 register TPURAM14_B {
			 type = IOR;
			 addr = 0x3045E0;
			 size = 2;
		}
		 register TPURAM15_B {
			 type = IOR;
			 addr = 0x3045F0;
			 size = 2;
		}
		 register QADC64MCR_A {
			 type = IOR;
			 addr = 0x304800;
			 size = 2;
		}
		 register QADC64INT_A {
			 type = IOR;
			 addr = 0x304804;
			 size = 2;
		}
		 register PORTQA_A {
			 type = IOR;
			 addr = 0x304806;
			 size = 1;
		}
		 register PORTQB_A {
			 type = IOR;
			 addr = 0x304807;
			 size = 1;
		}
		 register DDRQA_A {
			 type = IOR;
			 addr = 0x304808;
			 size = 2;
		}
		 register QACR0_A {
			 type = IOR;
			 addr = 0x30480A;
			 size = 2;
		}
		 register QACR1_A {
			 type = IOR;
			 addr = 0x30480C;
			 size = 2;
		}
		 register QACR2_A {
			 type = IOR;
			 addr = 0x30480E;
			 size = 2;
		}
		 register QASR0_A {
			 type = IOR;
			 addr = 0x304810;
			 size = 2;
		}
		 register QASR1_A {
			 type = IOR;
			 addr = 0x304812;
			 size = 2;
		}
		 register CCW_A {
			 type = IOR;
			 addr = 0x304A00;
			 size = 2;
		}
		 register RJURR_A {
			 type = IOR;
			 addr = 0x304A80;
			 size = 2;
		}
		 register LJSRR_A {
			 type = IOR;
			 addr = 0x304B00;
			 size = 2;
		}
		 register LJURR_A {
			 type = IOR;
			 addr = 0x304B80;
			 size = 2;
		}
		 register QADC64MCR_B {
			 type = IOR;
			 addr = 0x304C00;
			 size = 2;
		}
		 register QADC64INT_B {
			 type = IOR;
			 addr = 0x304C04;
			 size = 2;
		}
		 register PORTQA_B {
			 type = IOR;
			 addr = 0x304C06;
			 size = 1;
		}
		 register PORTQB_B {
			 type = IOR;
			 addr = 0x304C07;
			 size = 1;
		}
		 register DDRQA_B {
			 type = IOR;
			 addr = 0x304C08;
			 size = 2;
		}
		 register QACR0_B {
			 type = IOR;
			 addr = 0x304C0A;
			 size = 2;
		}
		 register QACR1_B {
			 type = IOR;
			 addr = 0x304C0C;
			 size = 2;
		}
		 register QACR2_B {
			 type = IOR;
			 addr = 0x304C0E;
			 size = 2;
		}
		 register QASR0_B {
			 type = IOR;
			 addr = 0x304C10;
			 size = 2;
		}
		 register QASR1_B {
			 type = IOR;
			 addr = 0x304C12;
			 size = 2;
		}
		 register CCW_B {
			 type = IOR;
			 addr = 0x304E00;
			 size = 2;
		}
		 register RJURR_B {
			 type = IOR;
			 addr = 0x304E80;
			 size = 2;
		}
		 register LJSRR_B {
			 type = IOR;
			 addr = 0x304F00;
			 size = 2;
		}
		 register LJURR_B {
			 type = IOR;
			 addr = 0x304F80;
			 size = 2;
		}
		 register QSMCMMCR {
			 type = IOR;
			 addr = 0x305000;
			 size = 2;
		}
		 register QDSCI_IL {
			 type = IOR;
			 addr = 0x305004;
			 size = 1;
		}
		 register QSPI_IL {
			 type = IOR;
			 addr = 0x305007;
			 size = 1;
		}
		 register SCC1R0 {
			 type = IOR;
			 addr = 0x305008;
			 size = 2;
		}
		 register SCC1R1 {
			 type = IOR;
			 addr = 0x30500A;
			 size = 2;
		}
		 register SC1SR {
			 type = IOR;
			 addr = 0x30500C;
			 size = 2;
		}
		 register SC1DR {
			 type = IOR;
			 addr = 0x30500E;
			 size = 2;
		}
		 register PORTQS {
			 type = IOR;
			 addr = 0x305014;
			 size = 2;
		}
		 register PQSPAR {
			 type = IOR;
			 addr = 0x305016;
			 size = 1;
		}
		 register DDRQS {
			 type = IOR;
			 addr = 0x305017;
			 size = 1;
		}
		 register SPCR0 {
			 type = IOR;
			 addr = 0x305018;
			 size = 2;
		}
		 register SPCR1 {
			 type = IOR;
			 addr = 0x30501A;
			 size = 2;
		}
		 register SPCR2 {
			 type = IOR;
			 addr = 0x30501C;
			 size = 2;
		}
		 register SPCR3 {
			 type = IOR;
			 addr = 0x30501E;
			 size = 1;
		}
		 register SPSR {
			 type = IOR;
			 addr = 0x30501F;
			 size = 1;
		}
		 register SCC2R0 {
			 type = IOR;
			 addr = 0x305020;
			 size = 2;
		}
		 register SCC2R1 {
			 type = IOR;
			 addr = 0x305022;
			 size = 2;
		}
		 register SC2SR {
			 type = IOR;
			 addr = 0x305024;
			 size = 2;
		}
		 register SC2DR {
			 type = IOR;
			 addr = 0x305026;
			 size = 2;
		}
		 register QSCI1CR {
			 type = IOR;
			 addr = 0x305028;
			 size = 2;
		}
		 register QSCI1SR {
			 type = IOR;
			 addr = 0x30502A;
			 size = 2;
		}
		 register SCTQ {
			 type = IOR;
			 addr = 0x30502C;
			 size = 2;
		}
		 register SCRQ {
			 type = IOR;
			 addr = 0x30504C;
			 size = 2;
		}
		 register RECRAM {
			 type = IOR;
			 addr = 0x305140;
			 size = 2;
		}
		 register TRANRAM {
			 type = IOR;
			 addr = 0x305180;
			 size = 2;
		}
		 register COMDRAM {
			 type = IOR;
			 addr = 0x3051C0;
			 size = 2;
		}
		 register MPWMSM0PERR {
			 type = IOR;
			 addr = 0x306000;
			 size = 2;
		}
		 register MPWMSM0PULR {
			 type = IOR;
			 addr = 0x306002;
			 size = 2;
		}
		 register MPWMSM0CNTR {
			 type = IOR;
			 addr = 0x306004;
			 size = 2;
		}
		 register MPWMSM0SCR {
			 type = IOR;
			 addr = 0x306006;
			 size = 2;
		}
		 register MPWMSM1PERR {
			 type = IOR;
			 addr = 0x306008;
			 size = 2;
		}
		 register MPWMSM1PULR {
			 type = IOR;
			 addr = 0x30600A;
			 size = 2;
		}
		 register MPWMSM1CNTR {
			 type = IOR;
			 addr = 0x30600C;
			 size = 2;
		}
		 register MPWMSM1SCR {
			 type = IOR;
			 addr = 0x30600E;
			 size = 2;
		}
		 register MPWMSM2PERR {
			 type = IOR;
			 addr = 0x306010;
			 size = 2;
		}
		 register MPWMSM2PULR {
			 type = IOR;
			 addr = 0x306012;
			 size = 2;
		}
		 register MPWMSM2CNTR {
			 type = IOR;
			 addr = 0x306014;
			 size = 2;
		}
		 register MPWMSM2SCR {
			 type = IOR;
			 addr = 0x306016;
			 size = 2;
		}
		 register MPWMSM3PERR {
			 type = IOR;
			 addr = 0x306018;
			 size = 2;
		}
		 register MPWMSM3PULR {
			 type = IOR;
			 addr = 0x30601A;
			 size = 2;
		}
		 register MPWMSM3CNTR {
			 type = IOR;
			 addr = 0x30601C;
			 size = 2;
		}
		 register MPWMSM3SCR {
			 type = IOR;
			 addr = 0x30601E;
			 size = 2;
		}
		 register MMCSM6CNT {
			 type = IOR;
			 addr = 0x306030;
			 size = 2;
		}
		 register MMCSM6ML {
			 type = IOR;
			 addr = 0x306032;
			 size = 2;
		}
		 register MMCSM6SCRD {
			 type = IOR;
			 addr = 0x306034;
			 size = 2;
		}
		 register MMCSM6SCR {
			 type = IOR;
			 addr = 0x306036;
			 size = 2;
		}
		 register MDASM11AR {
			 type = IOR;
			 addr = 0x306058;
			 size = 2;
		}
		 register MDASM11BR {
			 type = IOR;
			 addr = 0x30605A;
			 size = 2;
		}
		 register MDASM11SCRD {
			 type = IOR;
			 addr = 0x30605C;
			 size = 2;
		}
		 register MDASM11SCR {
			 type = IOR;
			 addr = 0x30605E;
			 size = 2;
		}
		 register MDASM12AR {
			 type = IOR;
			 addr = 0x306060;
			 size = 2;
		}
		 register MDASM12BR {
			 type = IOR;
			 addr = 0x306062;
			 size = 2;
		}
		 register MDASM12SCRD {
			 type = IOR;
			 addr = 0x306064;
			 size = 2;
		}
		 register MDASM12SCR {
			 type = IOR;
			 addr = 0x306066;
			 size = 2;
		}
		 register MDASM13AR {
			 type = IOR;
			 addr = 0x306068;
			 size = 2;
		}
		 register MDASM13BR {
			 type = IOR;
			 addr = 0x30606A;
			 size = 2;
		}
		 register MDASM13SCRD {
			 type = IOR;
			 addr = 0x30606C;
			 size = 2;
		}
		 register MDASM13SCR {
			 type = IOR;
			 addr = 0x30606E;
			 size = 2;
		}
		 register MDASM14AR {
			 type = IOR;
			 addr = 0x306070;
			 size = 2;
		}
		 register MDASM14BR {
			 type = IOR;
			 addr = 0x306072;
			 size = 2;
		}
		 register MDASM14SCRD {
			 type = IOR;
			 addr = 0x306074;
			 size = 2;
		}
		 register MDASM14SCR {
			 type = IOR;
			 addr = 0x306076;
			 size = 2;
		}
		 register MDASM15AR {
			 type = IOR;
			 addr = 0x306078;
			 size = 2;
		}
		 register MDASM15BR {
			 type = IOR;
			 addr = 0x30607A;
			 size = 2;
		}
		 register MDASM15SCRD {
			 type = IOR;
			 addr = 0x30607C;
			 size = 2;
		}
		 register MDASM15SCR {
			 type = IOR;
			 addr = 0x30607E;
			 size = 2;
		}
		 register MPWMSM16PERR {
			 type = IOR;
			 addr = 0x306080;
			 size = 2;
		}
		 register MPWMSM16PULR {
			 type = IOR;
			 addr = 0x306082;
			 size = 2;
		}
		 register MPWMSM16CNTR {
			 type = IOR;
			 addr = 0x306084;
			 size = 2;
		}
		 register MPWMSM16SCR {
			 type = IOR;
			 addr = 0x306086;
			 size = 2;
		}
		 register MPWMSM17PERR {
			 type = IOR;
			 addr = 0x306088;
			 size = 2;
		}
		 register MPWMSM17PULR {
			 type = IOR;
			 addr = 0x30608A;
			 size = 2;
		}
		 register MPWMSM17CNTR {
			 type = IOR;
			 addr = 0x30608C;
			 size = 2;
		}
		 register MPWMSM17SCR {
			 type = IOR;
			 addr = 0x30608E;
			 size = 2;
		}
		 register MPWMSM18PERR {
			 type = IOR;
			 addr = 0x306090;
			 size = 2;
		}
		 register MPWMSM18PULR {
			 type = IOR;
			 addr = 0x306092;
			 size = 2;
		}
		 register MPWMSM18CNTR {
			 type = IOR;
			 addr = 0x306094;
			 size = 2;
		}
		 register MPWMSM18SCR {
			 type = IOR;
			 addr = 0x306096;
			 size = 2;
		}
		 register MPWMSM19PERR {
			 type = IOR;
			 addr = 0x306098;
			 size = 2;
		}
		 register MPWMSM19PULR {
			 type = IOR;
			 addr = 0x30609A;
			 size = 2;
		}
		 register MPWMSM19CNTR {
			 type = IOR;
			 addr = 0x30609C;
			 size = 2;
		}
		 register MPWMSM19SCR {
			 type = IOR;
			 addr = 0x30609E;
			 size = 2;
		}
		 register MMCSM22CNT {
			 type = IOR;
			 addr = 0x3060B0;
			 size = 2;
		}
		 register MMCSM22ML {
			 type = IOR;
			 addr = 0x3060B2;
			 size = 2;
		}
		 register MMCSM22SCRD {
			 type = IOR;
			 addr = 0x3060B4;
			 size = 2;
		}
		 register MMCSM22SCR {
			 type = IOR;
			 addr = 0x3060B6;
			 size = 2;
		}
		 register MDASM27AR {
			 type = IOR;
			 addr = 0x3060D8;
			 size = 2;
		}
		 register MDASM27BR {
			 type = IOR;
			 addr = 0x3060DA;
			 size = 2;
		}
		 register MDASM27SCRD {
			 type = IOR;
			 addr = 0x3060DC;
			 size = 2;
		}
		 register MDASM27SCR {
			 type = IOR;
			 addr = 0x3060DE;
			 size = 2;
		}
		 register MDASM28AR {
			 type = IOR;
			 addr = 0x3060E0;
			 size = 2;
		}
		 register MDASM28BR {
			 type = IOR;
			 addr = 0x3060E2;
			 size = 2;
		}
		 register MDASM28SCRD {
			 type = IOR;
			 addr = 0x3060E4;
			 size = 2;
		}
		 register MDASM28SCR {
			 type = IOR;
			 addr = 0x3060E6;
			 size = 2;
		}
		 register MDASM29AR {
			 type = IOR;
			 addr = 0x3060E8;
			 size = 2;
		}
		 register MDASM29BR {
			 type = IOR;
			 addr = 0x3060EA;
			 size = 2;
		}
		 register MDASM29SCRD {
			 type = IOR;
			 addr = 0x3060EC;
			 size = 2;
		}
		 register MDASM29SCR {
			 type = IOR;
			 addr = 0x3060EE;
			 size = 2;
		}
		 register MDASM30AR {
			 type = IOR;
			 addr = 0x3060F0;
			 size = 2;
		}
		 register MDASM30BR {
			 type = IOR;
			 addr = 0x3060F2;
			 size = 2;
		}
		 register MDASM30SCRD {
			 type = IOR;
			 addr = 0x3060F4;
			 size = 2;
		}
		 register MDASM30SCR {
			 type = IOR;
			 addr = 0x3060F6;
			 size = 2;
		}
		 register MDASM31AR {
			 type = IOR;
			 addr = 0x3060F8;
			 size = 2;
		}
		 register MDASM31BR {
			 type = IOR;
			 addr = 0x3060FA;
			 size = 2;
		}
		 register MDASM31SCRD {
			 type = IOR;
			 addr = 0x3060FC;
			 size = 2;
		}
		 register MDASM31SCR {
			 type = IOR;
			 addr = 0x3060FE;
			 size = 2;
		}
		 register MPIOSMDR {
			 type = IOR;
			 addr = 0x306100;
			 size = 2;
		}
		 register MPIOSMDDR {
			 type = IOR;
			 addr = 0x306102;
			 size = 2;
		}
		 register MIOS1TPCR {
			 type = IOR;
			 addr = 0x306800;
			 size = 2;
		}
		 register MIOS1VNR {
			 type = IOR;
			 addr = 0x306804;
			 size = 2;
		}
		 register MIOS1MCR {
			 type = IOR;
			 addr = 0x306806;
			 size = 2;
		}
		 register MCPSMSCR {
			 type = IOR;
			 addr = 0x306816;
			 size = 2;
		}
		 register MIOS1SR0 {
			 type = IOR;
			 addr = 0x306C00;
			 size = 2;
		}
		 register MIOS1ER0 {
			 type = IOR;
			 addr = 0x306C04;
			 size = 2;
		}
		 register MIOS1RPR0 {
			 type = IOR;
			 addr = 0x306C06;
			 size = 2;
		}
		 register MIOS1LVL0 {
			 type = IOR;
			 addr = 0x306C30;
			 size = 2;
		}
		 register MIOS1SR1 {
			 type = IOR;
			 addr = 0x306C40;
			 size = 2;
		}
		 register MIOS1ER1 {
			 type = IOR;
			 addr = 0x306C44;
			 size = 2;
		}
		 register MIOS1RPR1 {
			 type = IOR;
			 addr = 0x306C46;
			 size = 2;
		}
		 register MIOS1LVL1 {
			 type = IOR;
			 addr = 0x306C70;
			 size = 2;
		}
		 register UMCR {
			 type = IOR;
			 addr = 0x307F80;
			 size = 4;
		}
		 register UTSTCREG {
			 type = IOR;
			 addr = 0x307F90;
			 size = 4;
		}
		 register UIPEND {
			 type = IOR;
			 addr = 0x307FA0;
			 size = 4;
		}
		 register SRAMMCR_A {
			 type = IOR;
			 addr = 0x380000;
			 size = 4;
		}
		 register SRAMMCR_B {
			 type = IOR;
			 addr = 0x380008;
			 size = 4;
		}
	}
}